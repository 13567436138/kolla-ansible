---
- name: Checking the api_interface is present
  fail: "msg='Please check the api_interface property - interface {{ api_interface }} not found'"
  when: api_interface not in ansible_interfaces

- name: Checking the api_interface is active
  fail: "msg='Please check the api_interface settings - interface {{ api_interface }} is not active'"
  when: hostvars[inventory_hostname]['ansible_' + api_interface]['active'] != True

- name: Checking the api_interface configuration
  fail: "msg='Please check the api_interface settings - interface {{ api_interface }} configuration missing'"
  when: hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4'] is not defined

- name: Checking the api_interface ip address configuration
  fail: "msg='Please check the api_interface settings - interface {{ api_interface }} ip address problem'"
  when: hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] is not defined

- name: Checking if kolla_internal_vip_address and kolla_external_vip_address are not pingable from any node
  command: ping -c 3 {{ item }}
  register: ping_output
  changed_when: false
  with_items:
    - "{{ kolla_internal_vip_address }}"
    - "{{ kolla_external_vip_address }}"
  failed_when: ping_output.rc != 1
  when: enable_haproxy | bool

- name: Checking if kolla_internal_vip_address is in the same network as api_interface on all nodes
  command: ip -4 -o addr show dev {{ api_interface }}
  register: ip_addr_output
  changed_when: false
  failed_when: "'169.254.' not in kolla_internal_vip_address and \
                kolla_internal_vip_address | ipaddr(ip_addr_output.stdout.split()[3]) is none"
  when: enable_haproxy | bool

- name: Checking free port for Kuryr
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ kuryr_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_kuryr | bool
    - inventory_hostname in groups['compute']

- name: Checking free port for HAProxy stats
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ haproxy_stats_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_haproxy | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for Influxdb Admin
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ influxdb_admin_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_influxdb | bool
    - inventory_hostname in groups['influxdb']

- name: Checking free port for Influxdb Http
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ influxdb_http_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_influxdb | bool
    - inventory_hostname in groups['influxdb']

- name: Checking free port for Keystone Admin
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ keystone_admin_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_keystone | bool
    - inventory_hostname in groups['keystone']

- name: Checking free port for Keystone Admin HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ keystone_admin_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_keystone | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for Keystone Public
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ keystone_public_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_keystone | bool
    - inventory_hostname in groups['keystone']

- name: Checking free port for Keystone Public HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ keystone_public_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_keystone | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for iscsi
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ iscsi_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_iscsid | bool
    - inventory_hostname in groups['tgtd']

- name: Checking free port for MariaDB
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ database_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_mariadb | bool
    - inventory_hostname in groups['mariadb']

- name: Checking free port for MariaDB HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ database_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_mariadb | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for MariaDB WSREP
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ mariadb_wsrep_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_mariadb | bool
    - inventory_hostname in groups['mariadb']

- name: Checking free port for MariaDB IST
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ mariadb_ist_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_mariadb | bool
    - inventory_hostname in groups['mariadb']

- name: Checking free port for MariaDB SST
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ mariadb_sst_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_mariadb | bool
    - inventory_hostname in groups['mariadb']

- name: Checking free port for Murano API
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ murano_api_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_murano | bool
    - inventory_hostname in groups['murano-api']

- name: Checking free port for Murano API HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ murano_api_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_murano | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for RabbitMQ
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ rabbitmq_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_rabbitmq | bool
    - inventory_hostname in groups['rabbitmq']

- name: Checking free port for RabbitMQ Management
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ rabbitmq_management_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_rabbitmq | bool
    - inventory_hostname in groups['rabbitmq']

- name: Checking free port for RabbitMQ Management HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ rabbitmq_management_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_rabbitmq | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for RabbitMQ Cluster
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ rabbitmq_cluster_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_rabbitmq | bool
    - inventory_hostname in groups['rabbitmq']

- name: Checking free port for RabbitMQ EPMD
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ rabbitmq_epmd_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_rabbitmq | bool
    - inventory_hostname in groups['rabbitmq']

- name: Check if all rabbit hostnames are resolvable
  command: "getent ahostsv4 {{ hostvars[item]['ansible_hostname'] }}"
  changed_when: false
  register: rabbitmq_hostnames
  with_items: "{{ groups['rabbitmq'] }}"
  when: enable_rabbitmq | bool

- fail: msg="Hostname has to resolve to IP address of api_interface"
  with_items: "{{ rabbitmq_hostnames.results }}"
  when:
    - "'{{ hostvars[item['item']]['ansible_' + hostvars[item['item']]['api_interface']]['ipv4']['address'] }}' not in '{{ item.stdout }}'"
    - enable_rabbitmq | bool

- name: Checking free port for Mongodb
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ mongodb_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - inventory_hostname in groups['mongodb']
    - enable_mongodb | bool

- name: Checking free port for Mongodb Web
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ mongodb_web_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - inventory_hostname in groups['mongodb']
    - enable_mongodb | bool

- name: Checking free port for Mongodb HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ mongodb_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - inventory_hostname in groups['haproxy']
    - enable_mongodb | bool

- name: Checking free port for Kibana Server
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + storage_interface]['ipv4']['address'] }}"
    port: "{{ kibana_server_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - inventory_hostname in groups['kibana']
    - enable_kibana | bool

- name: Checking free port for Rsync
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + storage_interface]['ipv4']['address'] }}"
    port: "873"
    connect_timeout: 1
    state: stopped
  when:
    - inventory_hostname in groups['swift-object-server']
    - enable_swift | bool

- name: Checking free port for Solum Application Deployment
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ solum_application_deployment_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_solum | bool
    - inventory_hostname in groups['solum-api']

- name: Checking free port for Solum Image Builder
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ solum_image_builder_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_solum | bool
    - inventory_hostname in groups['solum-api']

- name: Checking free port for Solum Application Deployment HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ solum_application_deployment_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_solum | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for Solum Image Builder HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ solum_image_builder_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_solum | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for Swift Object Server
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + storage_interface]['ipv4']['address'] }}"
    port: "{{ swift_object_server_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_swift | bool
    - inventory_hostname in groups['swift-object-server']

- name: Checking free port for Swift Account Server
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + storage_interface]['ipv4']['address'] }}"
    port: "{{ swift_account_server_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_swift | bool
    - inventory_hostname in groups['swift-account-server']

- name: Checking free port for Swift Container Server
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + storage_interface]['ipv4']['address'] }}"
    port: "{{ swift_container_server_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_swift | bool
    - inventory_hostname in groups['swift-container-server']

- name: Checking free port for Swift Proxy Server
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ swift_proxy_server_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_swift | bool
    - inventory_hostname in groups['swift-proxy-server']

- name: Checking free port for Swift Proxy Server HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ swift_proxy_server_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_swift | bool
    - inventory_hostname in groups['haproxy']

- name: Checking free port for RadosGW
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"
    port: "{{ rgw_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_ceph_rgw | bool
    - inventory_hostname in groups['ceph-rgw']

- name: Checking free port for RadosGW HAProxy
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ rgw_port }}"
    connect_timeout: 1
    state: stopped
  when:
    - enable_ceph_rgw | bool
    - inventory_hostname in groups['haproxy']
